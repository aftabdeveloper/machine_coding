import { useState, useRef, useEffect } from "react";

const Otp = ({ otpLength = 6 }) => {
  const [otpFields, setOtpFields] = useState(new Array(otpLength).fill(""));
  const ref = useRef([]);
  const handleKeyDown = (e, index) => {
    const key = e.key;
    console.log(key);
    const copyOfOtpFields = [...otpFields];

    if (key === "Backspace") {
      if (index > 0) ref.current[index - 1].focus();
      copyOfOtpFields[index] = "";
      setOtpFields(copyOfOtpFields);
    }

    if (key === "ArrowLeft") {
      if (index > 0) ref.current[index - 1].focus();
    }
    if (key === "ArrowRight") {
      if (index < otpLength - 1) ref.current[index + 1].focus();
    }
    if (isNaN(key)) {
      return;
    }

    if (index < otpLength - 1) ref.current[index + 1].focus();
    copyOfOtpFields[index] = key;
    setOtpFields(copyOfOtpFields);
  };
  useEffect(() => {
    ref.current["0"].focus();
  }, []);
  return (
    <>
      <div className="container">
        {otpFields.map((value, index) => (
          <input
            ref={(currentInput) => {
              ref.current[index] = currentInput;
            }}
            type="text"
            key={index}
            value={value}
            onKeyDown={(e) => handleKeyDown(e, index)}
          />
        ))}
      </div>
    </>
  );
};

export default Otp;


input {
  width: 40px;
  height: 40px;
  margin-right: 10px;
}